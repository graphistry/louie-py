[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "louieai"
version = "0.1.0"
description = "Python client for Louie.ai (Graphistry's AI investigation platform)"
authors = [
  { name = "Graphistry, Inc.", email = "support@graphistry.com" }
]
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering :: Information Analysis"
]
keywords = ["Louie.ai", "Graphistry", "AI", "client", "investigation"]
dependencies = [
  "graphistry>=0.34",
  "httpx>=0.28",
  "pandas>=1.0",
  "pyarrow>=8.0"
]
# Note: graphistry on PyPI is named 'graphistry'. We ensure a minimal version that likely includes Louie support.

[project.optional-dependencies]
dev = [
  "ruff==0.0.292",  # Compatible with Python 3.8
  "mypy==1.5.0",
  "pytest==7.4.0",
  "black==22.10.0",  # Compatible with Python 3.8
  "mkdocs==1.4.3",
  "mkdocs-material==8.5.10",
  "types-requests"  # (if needed for httpx, but httpx is typed; this could be omitted)
]
docs = [
  "mkdocs==1.4.3",
  "mkdocs-material==8.5.10"
]
# We define a separate "docs" extra in case readthedocs needs to install just docs requirements.

[tool.setuptools.packages.find]
where = ["src"]
include = ["louieai*"]

[tool.setuptools.package-data]
louieai = ["py.typed"]

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I", "B", "C4", "UP", "PYI", "SIM", "RUF"]
# Enforce no ignore comments
extend-select = ["RUF100"]  # Detects unnecessary # noqa comments
ignore = []
# Ban specific patterns
[tool.ruff.per-file-ignores]
# No file-specific ignores allowed

[tool.mypy]
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
# Disallow all forms of ignoring type errors
warn_unused_ignores = true
disallow_any_unimported = false  # Cannot be true when using untyped dependencies
disallow_any_expr = false  # Would be too restrictive
disallow_any_decorated = false  # Would be too restrictive
disallow_any_explicit = false  # Would be too restrictive
disallow_any_generics = true
disallow_subclassing_any = true

# Allow imports from graphistry which doesn't ship with type information
[[tool.mypy.overrides]]
module = "graphistry"
ignore_missing_imports = true
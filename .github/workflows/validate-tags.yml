name: Validate Version Tags

on:
  push:
    tags:
      - 'v*'

jobs:
  validate-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Validate tag format
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "Validating tag: $TAG_NAME"
          
          # Remove 'v' prefix if present
          VERSION="${TAG_NAME#v}"
          
          # Use Python to validate PEP 440 compliance
          python -c "
          from packaging.version import Version, InvalidVersion
          import sys
          
          try:
              Version('$VERSION')
              print(f'✅ Tag $TAG_NAME is PEP 440 compliant')
              sys.exit(0)
          except InvalidVersion as e:
              print(f'❌ Tag $TAG_NAME is NOT PEP 440 compliant: {e}')
              print()
              print('Valid version formats:')
              print('  - v0.6.0 (release)')
              print('  - v0.6.0a1 (alpha)')
              print('  - v0.6.0b1 (beta)')
              print('  - v0.6.0rc1 (release candidate)')
              print('  - v0.6.0.dev1 (development)')
              print('  - v0.6.0.post1 (post-release)')
              print()
              print('Invalid formats:')
              print('  - v0.6.0-preview (use v0.6.0a1 instead)')
              print('  - v0.6.0-feature (use v0.6.0.dev1 instead)')
              sys.exit(1)
          "

      - name: Prevent invalid tags
        if: failure()
        run: |
          echo "::error::Invalid version tag format. Tags must be PEP 440 compliant."
          exit 1